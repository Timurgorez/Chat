{"version":3,"sources":["store/apiData/actionTypes.js","store/apiData/reducers/apiDataReducer.js","store/appHelpers/actionTypes.js","store/appHelpers/reducers/appHelperReducers.js","store/rootReducer.js","socket.js","pages/MainPage.js","pages/LiveChat.js","App.js","index.js"],"names":["SET_CHAT","SET_MESSAGES","SET_USERS","SET_IS_AUTH","ADD_MESSAGE","initialState","chat","users","messages","name","roomId","isAuth","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","loading","alert","rootReducer","combineReducers","api","state","action","type","actionTypes","payload","helper","socket","io","connect","MainPage","history","useHistory","dispatch","useDispatch","useState","userName","setUserName","setRoomId","submitFormHandler","e","a","preventDefault","trim","axios","post","then","res","console","log","data","push","emit","toast","success","Fragment","Container","maxWidth","className","Grid","container","spacing","item","xs","noValidate","autoComplete","onSubmit","FormControl","fullWidth","variant","TextField","id","label","value","onChange","target","Button","color","LiveChat","useParams","Object","values","useSelector","textMsg","setTextMsg","useEffect","on","setUsers","setMessages","newUser","addMessage","document","querySelector","scrollTo","top","behavior","leaveUser","length","map","el","ind","Paper","elevation","style","background","marginLeft","marginRight","text","Date","date","toISOString","obj","toString","setTimeout","multiline","rows","App","exact","path","component","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","position","toastOptions","paddingLeft","zIndex","iconClose","primary","duration","getElementById"],"mappings":"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","file":"static/js/main.d8f0398d.chunk.js","sourcesContent":["export const SET_CHAT = 'apiData/SET_CHAT';\r\nexport const SET_MESSAGES = 'apiData/SET_MESSAGES';\r\nexport const SET_USERS = 'apiData/SET_USERS';\r\nexport const SET_IS_AUTH = 'apiData/SET_IS_AUTH';\r\nexport const ADD_MESSAGE = 'apiData/ADD_MESSAGE';\r\n\r\n\r\n\r\n\r\n// export const UPLOAD_OPERATORS = 'apiData/UPLOAD_OPERATORS';\r\n// export const SET_CONFIG = 'apiData/SET_CONFIG';\r\n// export const SET_COLUMNS = 'apiData/SET_COLUMNS';\r\n// export const SET_DATA = 'apiData/SET_DATA';\r\n//\r\n// export const SELECTED_FOLDERS = 'apiData/SELECTED_FOLDERS';\r\n// export const SET_DATES = 'apiData/SET_DATES';\r\n// export const SET_TABULATOR = 'apiData/SET_TABULATOR';\r\n// export const SET_FILTERED_DATA = 'apiData/SET_FILTERED_DATA';\r\n// export const SET_FILTER_NAME = 'apiData/SET_FILTER_NAME';\r\n// export const SET_COUNT_ROWS = 'apiData/SET_COUNT_ROWS';\r\n//\r\n// export const SET_CHAT_DETAILS = 'apiData/SET_CHAT_DETAILS';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const SELECT_POST = 'apiData/UPLOAD_FOLDERS';\r\nexport const FETCH_POSTS = 'apiData/UPLOAD_FOLDERS';\r\n\r\nexport const SHOW_LOADER = 'apiData/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'apiData/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'apiData/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'apiData/HIDE_ALERT';","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  chat: {},\r\n  users: [],\r\n  messages: [],\r\n  name: '',\r\n  roomId: null,\r\n  isAuth: false\r\n};\r\n\r\nexport default function apiDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case actionTypes.SET_CHAT:\r\n        return { ...state, chat: action.payload  };\r\n        break;\r\n\r\n      case actionTypes.SET_USERS:\r\n        return { ...state, users: action.payload };\r\n        break;\r\n\r\n      case actionTypes.SET_MESSAGES:\r\n        return { ...state, messages: action.payload  };\r\n        break;\r\n\r\n      case actionTypes.ADD_MESSAGE:\r\n        return { ...state, messages: [ ...state.messages, action.payload ]  };\r\n        break;\r\n\r\n      case actionTypes.SET_IS_AUTH:\r\n        return { ...state, isAuth: action.payload  };\r\n        break;\r\n\r\n      default:\r\n            return state\r\n    }\r\n}","export const SHOW_LOADER = 'appHelper/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'appHelper/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'appHelper/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'appHelper/HIDE_ALERT';","import {SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    alert: null\r\n};\r\n\r\nexport default function AppHelperReducers(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return { ...state, loading: true };\r\n            break;\r\n        case HIDE_LOADER:\r\n            return { ...state, loading: false };\r\n            break;\r\n        case SHOW_ALERT:\r\n            return { ...state, alert: action.payload };\r\n            break;\r\n        case HIDE_ALERT:\r\n            return { ...state, alert: null };\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport apiDataReducer from \"./apiData/reducers/apiDataReducer\";\r\nimport AppHelperReducers from \"./appHelpers/reducers/appHelperReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    api: apiDataReducer,\r\n    helper: AppHelperReducers\r\n});\r\n\r\nexport default rootReducer","import io from 'socket.io-client';\r\nimport toast from 'react-hot-toast';\r\n\r\n\r\nconst socket = io();\r\nsocket.connect();\r\n\r\nexport default socket;","import React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { Container, Grid, Button, TextField, FormControl } from '@material-ui/core';\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport socket from '../socket';\r\n\r\n\r\n\r\n\r\nimport './MainPage.styles.scss';\r\nimport {showAlert} from \"../store/appHelpers/actions/appHelpersActions\";\r\nimport * as actionTypes from \"../store/apiData/actionTypes\";\r\n\r\nfunction MainPage() {\r\n\r\n  const history = useHistory();\r\n\r\n  // get state in STORE\r\n\r\n  // const chat = useSelector(state => state.api.chat);\r\n\r\n  // END get state in STORE\r\n\r\n  const dispatch = useDispatch();\r\n  // dispatch(hideLoader())\r\n\r\n  const [userName, setUserName] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n\r\n\r\n  const submitFormHandler = async (e) => {\r\n    e.preventDefault();\r\n    if(roomId.trim() && userName.trim()){\r\n      await axios.post('/rooms', {userName, roomId})\r\n        .then(res => {\r\n          console.log('POST', res.data);\r\n        });\r\n      setRoomId('');\r\n      setUserName('');\r\n      dispatch({\r\n        type: actionTypes.SET_IS_AUTH,\r\n        payload: true\r\n      });\r\n      history.push('/room/'+ roomId + '/' + userName);\r\n      socket.emit('ROOM:JOIN', {\r\n        roomId,\r\n        userName\r\n      });\r\n      toast.success('Welcome in room!');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Container maxWidth=\"xl\" className=\"live-chat__container\">\r\n        <h1>Create privat chat</h1>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <form className=\"form\" noValidate autoComplete=\"off\" onSubmit={submitFormHandler}>\r\n              <div>\r\n                <FormControl fullWidth className=\"input-wrapper\" variant=\"outlined\">\r\n                  <TextField\r\n                    className=\"name-input\"\r\n                    id=\"name-input\"\r\n                    label=\"Your name\"\r\n                    value={userName}\r\n                    name=\"userName\"\r\n                    onChange={e => setUserName(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className=\"room-input\"\r\n                    id=\"room-input\"\r\n                    label=\"Room name\"\r\n                    name=\"roomId\"\r\n                    value={roomId}\r\n                    onChange={e => setRoomId(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </FormControl>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                  Go to room\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container, Grid, Button, TextField, FormControl } from '@material-ui/core';\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport toast from 'react-hot-toast';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport './LiveChat.styles.scss';\r\nimport socket from '../socket';\r\nimport * as actionTypes from '../store/apiData/actionTypes';\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\n\r\n\r\n\r\nfunction LiveChat() {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {roomId, userName} = useParams();\r\n\r\n  const users = Object.values( useSelector(state => state.api.users) );\r\n  const isAuth = useSelector(state => state.api.isAuth);\r\n  const messages = useSelector(state => state.api.messages);\r\n  console.log('USERS', users);\r\n\r\n  // const [ loading, setLoading ] = useState(true);\r\n  const [textMsg, setTextMsg] = useState('');\r\n  // const [ socket, setTextMsg ] = useState(null);\r\n  // const [ arrMsgs, setArrMsgs ] = useState([]);\r\n  // const [ color, setColor ] = useState('#' + Math.floor(Math.random()*16777215).toString(16));\r\n  // const [ error, setError ] = useState('');\r\n  // const [ invite, setInvite ] = useState(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log('isAuth', isAuth);\r\n    if(!isAuth) history.push('/');\r\n\r\n    socket.emit('ROOM:INIT_RUN', roomId);\r\n    socket.on('ROOM:INIT_GET', data => {\r\n      console.log(data);\r\n      setUsers(data.users);\r\n      setMessages(data.messages);\r\n    });\r\n\r\n    socket.on('ROOM:JOINED', data => {\r\n      console.log('NEW USER', data);\r\n      toast.success('New user (' + data.newUser + ') is connected!');\r\n      setUsers(data.users);\r\n    });\r\n    socket.on('ROOM:NEW_MESSAGE', data => {\r\n      console.log('NEW_MESSAGE', data);\r\n      toast.success('New message from (' + data.userName + ') !');\r\n      addMessage(data);\r\n      document.querySelector('#msgField').scrollTo({\r\n        top: 99999,\r\n        behavior: \"smooth\"\r\n      });\r\n    });\r\n    socket.on('ROOM:LEAVE', data => {\r\n      console.log('LEAVE USER', data);\r\n      toast.success('User (' + data.leaveUser + ') is disconnected!');\r\n      setUsers(data.users);\r\n    });\r\n\r\n  }, []);\r\n\r\n\r\n  const addMessage = (data) => {\r\n    dispatch({\r\n      type: actionTypes.ADD_MESSAGE,\r\n      payload: data\r\n    })\r\n  };\r\n  const setUsers = (data) => {\r\n    dispatch({\r\n      type: actionTypes.SET_USERS,\r\n      payload: data\r\n    })\r\n  };\r\n  const setMessages = (data) => {\r\n    dispatch({\r\n      type: actionTypes.SET_MESSAGES,\r\n      payload: data\r\n    });\r\n  };\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n    if(!textMsg) return;\r\n    const obj = {userName, roomId, text: textMsg, date: (new Date()).toString() };\r\n    addMessage(obj);\r\n    setTimeout(function () {\r\n      document.querySelector('#msgField').scrollTo({\r\n        top: 99999,\r\n        behavior: \"smooth\"\r\n      });\r\n    }, 100);\r\n    socket.emit('ROOM:NEW_MESSAGE', obj);\r\n    setTextMsg('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"live-chat\">\r\n      <h1>Private Chat</h1>\r\n      <Container maxWidth=\"md\" className=\"live-chat__container\">\r\n        <Grid container spacing={3} className=\"wrap-block\">\r\n          <Grid item xs={4} className=\"users-block\">\r\n            <h3>Online {users && users.length} users</h3>\r\n            {users && users.map((el) => (\r\n              <p key={el}>{el}</p>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={8} className=\"messages-block\">\r\n            <h3>Chat Area</h3>\r\n            <div id=\"msgField\">\r\n              {messages.map((el, ind) => (\r\n              <Paper className=\"chat-msg\" elevation={3} key={ind} style={{background: 'lightgrey', marginLeft: el.userName === userName && '40px', marginRight: el.userName === userName && '0'}} >\r\n                <span>{el.userName}</span>\r\n                <p>{el.text}</p>\r\n                <span className=\"chat-timestamp\">{new Date(el.date).toISOString()}</span>\r\n              </Paper>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            <form className=\"form\" noValidate autoComplete=\"off\" onSubmit={submitFormHandler}>\r\n              <div>\r\n                <FormControl fullWidth className=\"input-wrapper\" variant=\"outlined\">\r\n                  <TextField\r\n                    className=\"msg-input\"\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Type here!\"\r\n                    multiline\r\n                    rows={1}\r\n                    value={textMsg}\r\n                    onChange={e => setTextMsg(e.target.value) }\r\n                    variant=\"outlined\"\r\n                    // disabled={error}\r\n                  />\r\n                </FormControl>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </Grid>\r\n    </Grid>\r\n      </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default LiveChat;\r\n","import React from 'react';\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\n\nimport './App.css';\nimport MainPage from './pages/MainPage';\nimport LiveChat from \"./pages/LiveChat\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage}/>\n\n          {/* <Route path=\"/chat\" exact component={LiveChat} /> */}\n\n\n          <Route path=\"/room/:roomId/:userName\" exact component={LiveChat}/>\n\n\n          {/* User */}\n          {/* {isAuthenticated(this.props) && (\n           <Route path=\"/user/my-features\" component={MyFeatures} />\n           )}\n           {isAuthenticated(this.props) && (\n           <Route path=\"/user/my-profile\" component={MyProfile} />\n           )} */}\n\n          {/* Admin */}\n\n          {/* {isAdmin(this.props) && (\n           <Route path=\"/admin/posts\" exact component={AdminPosts} />\n           )}\n           {isAdmin(this.props) && (\n           <Route path=\"/admin/users\" exact component={Users} />\n           )} */}\n          {/* Auth */}\n          {/* <Route path=\"/login\" exact component={Login} />\n           <Route path=\"/confimation\" exact component={Confirmation} />\n           <Route path=\"/registration\" exact component={Registration} /> */}\n          {/* No found */}\n          {/*<Route render={() => <div style={{background: \"url=''\"}}>fvd</div>} />*/}\n          {/* <Route exact component={NotFound} /> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\n\n// import thunk from 'redux-thunk';\n\nimport rootReducer from './store/rootReducer';\n\nimport './index.css';\nimport App from './App';\n\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    // thunk,\n    //runAPImiddleware\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Provider store={store}>\n      <Toaster\n        position=\"top-right\"\n        // reverseOrder={false}\n        toastOptions={{\n          style: {\n            paddingLeft: '15px',\n            zIndex: 1,\n          },\n          iconClose: {\n            primary: 'grey',\n          },\n          duration: 3000,\n        }}\n      />\n      <App />\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}